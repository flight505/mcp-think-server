# Smithery configuration file
name: "@flight505/mcp-think-tank"
description: "An MCP server that provides reasoning and knowledge graph capabilities for AI assistants"
version: "2.0.7"
displayName: "MCP Think Tank"
summary: "A knowledge graph-based reasoning tool with structured thinking and web research capabilities"
homepage: "https://github.com/flight505/mcp-think-tank"
repository: "https://github.com/flight505/mcp-think-tank"
keywords:
  - reasoning
  - knowledge-graph
  - structured-thinking
  - memory
  - task-management
  - exa
  - web-research
  - think

# Build configuration
build:
  dockerfile: Dockerfile

# Runtime configuration for Smithery compatibility
runtime:
  maxToolScanTimeoutMs: 60000
  lazyLoading: true

# Server configuration
startCommand:
  type: streamable-http
  configSchema:
    type: object
    properties:
      memoryPath:
        type: string
        description: "Path to memory.jsonl file for persistent knowledge graph storage"
      exaApiKey:
        type: string
        description: "API key for Exa web search functionality"
      toolLimit:
        type: number
        description: "Maximum number of tool calls allowed per session (default: 25)"
      autoLink:
        type: boolean
        description: "Enable automatic entity linking in knowledge graph (default: true)"
    required: []
    description: "Configuration options for MCP Think Tank server"
  commandFunction: |
    config => ({
      command: 'node',
      args: ['dist/src/server.js'],
      env: {
        MEMORY_PATH: config.memoryPath || '/data/memory.jsonl',
        EXA_API_KEY: config.exaApiKey,
        TOOL_LIMIT: config.toolLimit?.toString(),
        AUTO_LINK: config.autoLink?.toString(),
        MCP_TRANSPORT: 'streamable-http',
        MCP_HOST: '0.0.0.0',
        MCP_PORT: '8000',
        MCP_PATH: '/mcp',
        ASYNC_SCANNING: 'true',
        TOOL_SCAN_TIMEOUT: '60000',
        SCAN_RETRY_COUNT: '3',
        SCAN_CONCURRENCY: '10'
      }
    })

# Documentation for users
readme: |
  ## MCP Think Tank
  
  A powerful MCP server that provides reasoning and knowledge graph capabilities for AI assistants. Key features include:
  
  - üí≠ **Think Tool**: Dedicated space for structured reasoning and self-reflection.
  - üß© **Knowledge Graph**: Simple and effective persistent memory system.
  - üìù **Task Management**: Plan, track, and update tasks integrated with the knowledge graph.
  - üåê **Web Research**: Search the web and get sourced answers using Exa API.
  
  ### Configuration
  
  - **memoryPath**: Path to memory.jsonl file (required, defaults to /data/memory.jsonl in the container)
  - **exaApiKey**: API key for Exa web search (required for search tools)
  - **toolLimit**: Maximum tool calls per session (default: 25)
  - **autoLink**: Enable automatic entity linking (default: true)
  
  ### Available Tools
  
  **Think & Reasoning**
  - `think`: Structure your reasoning process with self-reflection
  
  **Knowledge Graph**
  - `upsert_entities`: Create or update entities in knowledge graph
  - `create_relations`: Create relations between entities
  - `add_observations`: Add observations to existing entities
  - `search_nodes`: Search for entities by keyword
  - `open_nodes`: Retrieve specific entities
  - `memory_query`: Query memory with filters (time, tags, keywords)
  
  **Task Management**
  - `plan_tasks`: Create multiple tasks with priorities
  - `list_tasks`: View and filter current tasks
  - `next_task`: Get highest priority task
  - `complete_task`: Mark task as done
  - `update_tasks`: Modify existing tasks
  
  **Web Research**
  - `exa_search`: Search the web
  - `exa_answer`: Get factual answers with sources
  
  For more information, visit the [GitHub repository](https://github.com/flight505/mcp-think-tank). 